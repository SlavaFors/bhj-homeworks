/*Необходимо дописать игру, убивающую кротов при клике на них. В случайной лунке появляется крот.
При нажатии на него, игроку засчитывается +1 за нажатие. Игрок побеждает, если своевременно убивает 10 кротов. 
При 5 поражениях игра заканчивается.

Исходные данные
Вам требуется дописать уже существующий код, в котором реализовано появление крота в случайной лунке.

==Случайным образом у одной из лунок добавляется класс hole_has-mole, что значит, что в лунке есть крот.

Только если при клике на лунку с классом hole_has-mole вы должны засчитать +1 к победе. В ином случае - поражение.

Процесс реализации
Используя цикл зарегистрируйте для каждой лунки обработчик событий
Проверьте наличие нужного класса и увеличьте значение нужного счетчика
По выигрышу или проигрышу обнулите статистику
Чтобы не создавать для каждой лунки отдельную переменную, напишите функцию getHole( index ), 
которая по индексу будет возвращать нужный элемент. Обратите внимание, 
что идентификаторы лунок располагают для такого подхода. Пример реализации можно посмотреть в файле base.js.

Советы
Используйте цикл для задания обработчика для каждой лунки.
Для проверки на наличие того или иного класса, используйте метод includes:
hole.className.includes( 'hole_has-mole' );
Более удобный вариант - использовать объект classList, с которым вы познакомитесь позднее. Он содержит удобный метод contains:

;
*/
const dead = document.getElementById("dead");
const lost = document.getElementById("lost");


for (let i = 1; i < 10; i++) {
  let hole = document.getElementById(`hole${i}`);
  hole.onclick = function () {
    if (hole.className.includes('hole_has-mole')){
    dead.textContent++; //deadCount++;let deadCount = 0; let lostCount = 0;
  } else {
    lost.textContent++; // lostCount++;
  }

  if(dead.textContent == 10){
    alert ("Победа!");
    dead.textContent = 0;
    lost.textContent = 0;
  } 
  if(lost.textContent == 5){
    alert ("Вы проиграли!");
    dead.textContent = 0;
    lost.textContent = 0;
  }
  } 
};

